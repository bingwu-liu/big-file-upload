package com.van;

import cfca.sadk.algorithm.common.Mechanism;
import cfca.sadk.lib.crypto.JCrypto;
import cfca.sadk.lib.crypto.Session;
import cfca.sadk.util.CertUtil;
import cfca.sadk.util.EncryptUtil;
import cfca.sadk.util.EnvelopeUtil;
import cfca.sadk.util.KeyUtil;
import cfca.sadk.x509.certificate.X509Cert;

import java.security.PrivateKey;

public class Test {

    private static String privateKey="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";

    public static final String aesPass = "cfca1234";

    public static final String shSM2Pub="MIIBsDCCAVWgAwIBAgIIDOaw5gS6TZMwDAYIKoEcz1UBg3UFADAqMQswCQYDVQQGEwJDTjEbMBkGA1UEAwwSY29tLnNoZWNhLmNhLlRlc3QwMB4XDTIyMTIxMzA3MzUzNFoXDTIzMTIxMzA3MzUzNFowKjELMAkGA1UEBhMCQ04xGzAZBgNVBAMMEmNvbS5zaGVjYS5jYS5UZXN0MDBZMBMGByqGSM49AgEGCCqBHM9VAYItA0IABLJpn5goTkMfcvhHoYR4vQksue3wdZzk40abdCrG9/sTY4kkgXA0V5Sgzz7+L1uk5f7U1zzM3sBXm4UTcBYCvK+jYzBhMA8GA1UdEwEB/wQFMAMBAf8wDgYDVR0PAQH/BAQDAgGGMB0GA1UdDgQWBBREmlJUB9c/FKLcIRmZke+QhhVPGzAfBgNVHSMEGDAWgBREmlJUB9c/FKLcIRmZke+QhhVPGzAMBggqgRzPVQGDdQUAA0cAMEQCIG9ToBw12Y+XyorduaczyqxNOlZ5koeFT0+CxuWtIPuTAiAMRmc+xK6fRoV49EYuOyeBmY0ZF6K+/cZlpIP4i4OieA==";

    private static String pubKey="MIIEITCCAwmgAwIBAgIIMwAAAAV4V2YwDQYJKoZIhvcNAQELBQAwXTELMAkGA1UEBhMCQ04xMDAuBgNVBAoMJ0NoaW5hIEZpbmFuY2lhbCBDZXJ0aWZpY2F0aW9uIEF1dGhvcml0eTEcMBoGA1UEAwwTQ0ZDQSBBQ1MgVEVTVCBPQ0EzMzAeFw0yMDA4MTkxNDAzNTNaFw0yNTA4MTkxNDAzNTNaMIGAMQswCQYDVQQGEwJDTjEXMBUGA1UECgwOQ0ZDQSBPQ0EzMyBSU0ExDTALBgNVBAsMBFNERUcxGTAXBgNVBAsMEE9yZ2FuaXphdGlvbmFsLTIxLjAsBgNVBAMMJVNERUdA5Zu95L+h5rWL6K+V5Yqg6Kej5a+G6K+B5LmmQFoxQDEwggEiMA0GCSqGSIb3DQEBAQUAA4IBDwAwggEKAoIBAQCf3YKPA/RSs8Z3IxuX6rzjcDebymhbfH3R/yd6iqoSyGWeVMK8i8nxCosqTDvOOsJIGG+M15gq7ko/kl+nlwjcBZUfSbCvf6Q55wSD58SPEpQcyqdwtjlWY7jBEdda/Z3bt5agJdDBqJuS67/vaJ5gr1kUTy00TatviWsIopU580Lnk4SCJBsrX80U4Mz52XvrnMyNg8hbuskskXYSh8FJGeXpcQtEXIXUOdt/8tpYpa2zvwZjFo2rBINM2lsWxe80K1tgFbhGcCu6FkBWvAUNd46I2rlUwWFVsc23muYKdiaqU4WVYJPtx+OleoF937zBNYj4LpuLNeph3SoN8TyBAgMBAAGjgcAwgb0wHwYDVR0jBBgwFoAUnu5dMsxzrpI2zBQRz//XDjA+b9EwDAYDVR0TAQH/BAIwADA+BgNVHR8ENzA1MDOgMaAvhi1odHRwOi8vdWNybC5jZmNhLmNvbS5jbi9PQ0EzMy9SU0EvY3JsMTE1OC5jcmwwDgYDVR0PAQH/BAQDAgM4MB0GA1UdDgQWBBTJovGlQ04vERLu9k9eNslGJ3MbZDAdBgNVHSUEFjAUBggrBgEFBQcDAgYIKwYBBQUHAwQwDQYJKoZIhvcNAQELBQADggEBAFPsK82L9c+HIkeu+o04wIgYjCJvOr+vNyiCdNwXWyMdGZEeFADiR7DR9B5Wdqwl+ijtguTvP33e2CgLAqAQO1EQ7aLmbLUEEqSTls+gjeNxxEFJPIJXLDha/qmpnKJ9H/2FjL+BgGWZHKIy7qOJ/jQo8UiCkPf8ecd5buDB38whXKH/akUeNyWqO3fAxkrfTTHUtWrNd7fAQ5rgHGvsNbVjHM0Quu+kVfBNJiaDnJnK7hjHkR6g0ylf4l6A5YTkO6hr2rmrEO+wwfcR6kHLqxXPpLQeZIh9IWVlB6uVIZbhLcDWLsTqcnRfg0Ipkq6YiXBNPKs+7zXH04YlKGm1FFg=";
    private static String shangHCA="MIIFYTCCBEmgAwIBAgIQdOVAdbApStqDzVzXqCWl7DANBgkqhkiG9w0BAQsFADAxMQswCQYDVQQGEwJDTjESMBAGA1UECgwJVW5pdFRydXN0MQ4wDAYDVQQDDAVTSEVDQTAeFw0yMjExMjIwNjIxNTRaFw0yMjEyMjIxNTU5NTlaMCcxCzAJBgNVBAYTAkNOMRgwFgYDVQQDDA/mtYvor5Xpob7kuJbmnagwggEiMA0GCSqGSIb3DQEBAQUAA4IBDwAwggEKAoIBAQDckR3Qshr62YnZYoAXYSXCjbVQFgedEPchKiosTvMRsej4HKx3p8DRNDFbIeZURBSDCK6IZ5ddNZOq1HEddbcpIcMchuxTMn2fjQ/KOgCp8pb7nBhcTClh7AZ39VcFfaGH+RrJ9jJtkdxxnKp+WMFG4vjcaifDRJZta7mmR0nm24dCwHuKTph6nugc11C11u+HfZWfNR38bvwAZqMuQuSMnZJPxZA1XCQKrIumVyH1EF+Ok62KN1JQKjCi2Vu++3UBWy0eLFSFrdMlpjVUah+DgI/vjeIdmcwx5L9jE2drttoKVXgsF2yrGpd7J85a+FhXMzzxc4OD2OcRJpHHLk3DAgMBAAGjggJ9MIICeTATBgNVHSUEDDAKBggrBgEFBQcDAjBwBggrBgEFBQcBAQRkMGIwMAYIKwYBBQUHMAGGJGh0dHA6Ly8xNzIuMTcuMS4xNzEvU2hlY2Evc2hlY2Eub2NzcDAuBggrBgEFBQcwAoYiaHR0cDovLzE3Mi4xNy4xLjE1NC9ST09UL1NIRUNBLmNlcjAfBgNVHSMEGDAWgBSIw6ZKuA7N9BnehfL7wkVm2z3JoTAdBgNVHQ4EFgQUubspJB++a3D2mv7KCBnmghhJ2JYwCwYDVR0PBAQDAgQwMEEGA1UdIAQ6MDgwNgYJKoEcAYbvOoEVMCkwJwYIKwYBBQUHAgEWG2h0dHA6Ly93d3cuc2hlY2EuY29tL3BvbGljeTAJBgNVHRMEAjAAMC4GBiqBHAHFOAQkMCIwIAYIKoEcAcU4gRQEFFNGNDIwNjgzMTk5NjEyMjY1ODM5MCIGCCqBHNAUBAEBBBagFBMSNDIwNjgzMTk5NjEyMjY1ODM5MCoGCCqBHIbvOgxnBB4THGYwN3Z6Q2pGMWs5SnlhQ2VxYU9CMkY1SzdMaz0wgdQGA1UdHwSBzDCByTCBk6CBkKCBjYaBimxkYXA6Ly8xNzIuMTcuMS4xNzY6Mzg5L2NuPUNSTDk2NDMuY3JsLG91PVJBOTAzMSxvdT1DQTIxLG91PWNybCxvPVVuaVRydXN0P2NlcnRpZmljYXRlUmV2b2NhdGlvbkxpc3Q/YmFzZT9vYmplY3RDbGFzcz1jUkxEaXN0cmlidXRpb25Qb2ludDAxoC+gLYYraHR0cDovLzE3Mi4xNy4xLjE1NC9DQTIxL1JBOTAzMS9DUkw5NjQzLmNybDANBgkqhkiG9w0BAQsFAAOCAQEAwRDExH3CZEMxlzXT7ZIOl/UM49Nu53Vx0pbcCgNKAm/ix2W1//40No2Ieqhjd4cYjfToYDBVW12n/q2/WXEVxHjDRFWrd4JVrEuxiJM2qyUrkXiKWS6kPP/SuiWnWJG0//EKSoKrfTWMupoXTUtbifHw7DC0eTWkKft4SirfLqBwV6DFbdeS/2eG081P45W9RP6U5h8oAEWji1dQBUMZqi/5bfilbs1Yt2zBurGhVjRmLHjBWEADVbltPcJwrqE9nibgvqrnONVR+jv7U0Ss1rydP9QoAVNvmiDamaJVkyIhESxbSLq5EZm7cqLLQJQoL98370NHtKINH/a2o9xq4w==";
    private static String axjCA="MIIEcjCCA1qgAwIBAgIUSl/yW93bwharYfnox31l6GlZZbEwDQYJKoZIhvcNAQELBQAwRjEWMBQGA1UEAwwNc3ViQ0EtUlNBMjA0ODEVMBMGA1UECwwMaXRydXNjaGluYUNBMRUwEwYDVQQKDAxpdHJ1c2NoaW5hQ0EwHhcNMjIxMjAyMDkwMjM2WhcNMjMwOTI5MDYwMzA5WjBRMUIwQAYDVQQDDDlTREVHQOWMl+S6rOS4reaLm+S6kui/nua1i+ivleWFrOWPuEBOOTExMTAxMTFNQTAxQlU2QzZHQDExCzAJBgNVBAYMAkNOMIIBIjANBgkqhkiG9w0BAQEFAAOCAQ8AMIIBCgKCAQEAhPrCQ1yZnQ0snaBQ0HHBu9MWNoOUuS+gYdm0ItXpwwC0lXl+wJX+haumFH39LaDE8mx31Y/XE1YLYO7bglDoDf2LWCw3dq1ky8h4DSMBWHOI/Z7lzPcrsnbeP7wMOCpQdd/D14ekQnqVWUZe5HlPFSni62kcmuLP+K6490A4gNjBxWwNijq4l1F9NYtVSeMwL41DieporxZzIGiHJAKNeTzowACoqOGbBxJ0AcZOExWwISlJuuRVUIzQ004r+JMdrv/TbJB6N/TAzJQeVRQa7WkFQj1tNzXLEluV363Z047gGB/j+XGto8PrDWwqdvSt6tUCKWZ2bHyGgZKt0XtGhQIDAQABo4IBSzCCAUcwCQYDVR0TBAIwADALBgNVHQ8EBAMCBSAwagYDVR0uBGMwYTBfoF2gW4ZZaHR0cDovLzEyMy41Ni45LjU2OjgwODAvVG9wQ0EvcHVibGljL2l0cnVzY3JsP0NBPTZEQ0VDNkUwMzU4OTlDN0IwRDk0RjM1QkQ1MjcyNTRBMTJDQzk1NkEwagYDVR0fBGMwYTBfoF2gW4ZZaHR0cDovLzEyMy41Ni45LjU2OjgwODAvVG9wQ0EvcHVibGljL2l0cnVzY3JsP0NBPTZEQ0VDNkUwMzU4OTlDN0IwRDk0RjM1QkQ1MjcyNTRBMTJDQzk1NkEwHwYDVR0jBBgwFoAUCYQUjVTaVvF5fg0sJ4pU8zBjm4UwHQYDVR0OBBYEFHAfBlnZXrixyKcSsqIUlXOCIOovMBUGB2CBHAEGCgIECgwISVRSVVNLTUMwDQYJKoZIhvcNAQELBQADggEBAG5ZtcBzjiDk9khLUwXtK4txozfPaKPQ8rMnzxnRT+c+axBKplWnU2E8bwwRlnwgZw9DrbfU8UmcqwxTH+faBG49f2JEGilcVCUPEA9/J+rdlR/cyDfuiDQt0T6eRRPwc3FQzPIm5bVNOH+1DmlffUrJo8/CrwjwiwWrr7a1VJ7sICg22nKfT0OZhPXLh23uXOQ2pMBIC823zuLIeWYeU+8f8YXOmjWBY5hc4wYxkLE4jGMWFWHIdrb6taEioxOhBS9ZNW+3O4SM2vjhcDhlOAadcU3jWZPciFI+lLdIywxwwKKeOkqzbBItoT+FyiilcdaTrhaHDNyuZWCtGKkkz4E=";

    private static String shang="MIID8zCCA5agAwIBAgIQb8yIs5W2RV+oDM786/xnVjAMBggqgRzPVQGDdQUAMDkxCzAJBgNVBAYTAkNOMREwDwYDVQQKDAhVbmlUcnVzdDEXMBUGA1UEAwwOU0hFQ0EgU00yIFRlc3QwHhcNMjIxMjAxMDY0MDE4WhcNMjQxMjAxMTU1OTU5WjAnMQswCQYDVQQGEwJDTjEYMBYGA1UEAwwP5rWL6K+V6buE5Li55aauMFkwEwYHKoZIzj0CAQYIKoEcz1UBgi0DQgAECTVTB+3fQPmWW5JeFVP4aDGfNplwY6ZRMCpyqYyqi2A9Xd/uC2IOr+zv520zby5eymHAsQ+YMMyxvx0VrYc2EqOCAo4wggKKMB0GA1UdJQQWMBQGCCsGAQUFBwMCBggrBgEFBQcDCjB3BggrBgEFBQcBAQRrMGkwMAYIKwYBBQUHMAGGJGh0dHA6Ly8xNzIuMTcuMS4xNzEvU2hlY2Evc2hlY2Eub2NzcDA1BggrBgEFBQcwAoYpaHR0cDovLzE3Mi4xNy4xLjE1NC9ST09UL1NIRUNBU00yVGVzdC5jZXIwHwYDVR0jBBgwFoAUnuoEUuFRuK5Nt4WTZhUpJTplntIwHQYDVR0OBBYEFBNw1z3bhc53S8AxAjvq8WqvL4NiMAsGA1UdDwQEAwIEMDBBBgNVHSAEOjA4MDYGCSqBHAGG7zqBFTApMCcGCCsGAQUFBwIBFhtodHRwOi8vd3d3LnNoZWNhLmNvbS9wb2xpY3kwCQYDVR0TBAIwADAuBgYqgRwBxTgEJDAiMCAGCCqBHAHFOIEUBBRTRjMzMTAyMjE5OTIwNjE4MDA0MDAiBggqgRzQFAQBAQQWoBQTEjMzMTAyMjE5OTIwNjE4MDA0MDAqBggqgRyG7zoMZwQeExxVNElDazU1ZGovbXdCNU9tNlBPSDVHMk53ZXM9MIHUBgNVHR8EgcwwgckwgZOggZCggY2GgYpsZGFwOi8vMTcyLjE3LjEuMTc2OjM4OS9jbj1DUkw5NjQ1LmNybCxvdT1SQTkwMzEsb3U9Q0ExMSxvdT1jcmwsbz1VbmlUcnVzdD9jZXJ0aWZpY2F0ZVJldm9jYXRpb25MaXN0P2Jhc2U/b2JqZWN0Q2xhc3M9Y1JMRGlzdHJpYnV0aW9uUG9pbnQwMaAvoC2GK2h0dHA6Ly8xNzIuMTcuMS4xNTQvQ0ExMS9SQTkwMzEvQ1JMOTY0NS5jcmwwDAYIKoEcz1UBg3UFAANJADBGAiEA0kyFM2SHVvGCNEfxwRXMOaNgRKwwSnRRBW58fPIvh9MCIQDM/Vl5iIEJFxgYGQeaS5EtZao52NBOUBWORRBbQcZNNA==";

    public static String aesEncode(String aesKey, String aesPass, String content) {
        try {
            String AEScontent = "";
            String deviceName = "JSOFT_LIB";
            JCrypto.getInstance().initialize("JSOFT_LIB", (Object)null);
            Session session = JCrypto.getInstance().openSession("JSOFT_LIB");
            X509Cert cert = CertUtil.getCertFromPFX(aesKey.getBytes(), aesPass);
            String mechanismType = cert.isSM2Cert() ? Mechanism.SM4_CBC : "RSA/ECB/PKCS1PADDING";
            Mechanism mechanism = new Mechanism(mechanismType);
            byte[] base64Bytes = EncryptUtil.encrypt(mechanism, cert.getPublicKey(), content.getBytes("UTF-8"), session);
            AEScontent = new String(base64Bytes, "UTF-8");
            return AEScontent;
        } catch (Exception var10) {
            var10.printStackTrace();
            return null;
        }
    }

    public static String aesEncode(String publicKey, String content) {
        try {
            String AEScontent = "";
            String deviceName = "JSOFT_LIB";
            JCrypto.getInstance().initialize("JSOFT_LIB", (Object)null);
            Session session = JCrypto.getInstance().openSession("JSOFT_LIB");
            X509Cert cert = new X509Cert(publicKey.getBytes());
            X509Cert[] recvcerts = new X509Cert[]{cert};
            String symmetricAlgorithm = cert.isSM2Cert() ? Mechanism.SM4_CBC : Mechanism.DES3_CBC;
            byte[] base64Bytes = EnvelopeUtil.envelopeMessage(content.getBytes(), symmetricAlgorithm, recvcerts, session);
            AEScontent = new String(base64Bytes, "UTF-8");
            return AEScontent;
        } catch (Exception var9) {
            var9.printStackTrace();
            return null;
        }
    }

    public static String aesDncode(String aesKey, String aesPass, String content) {
        try {
            String AESDecode = "";
            String deviceName = "JSOFT_LIB";
            JCrypto.getInstance().initialize("JSOFT_LIB", (Object)null);
            Session session = JCrypto.getInstance().openSession("JSOFT_LIB");
            X509Cert recvcert = CertUtil.getCertFromPFX(aesKey.getBytes(), aesPass);
            PrivateKey priKey = KeyUtil.getPrivateKeyFromPFX(aesKey.getBytes(), aesPass);
            byte[] decryptText = EnvelopeUtil.openEvelopedMessage(content.getBytes(), priKey, recvcert, session);
            AESDecode = new String(decryptText, "UTF-8");
            return AESDecode;
        } catch (Exception var9) {
            var9.printStackTrace();
            return null;
        }
    }

    public static void main(String[] args) {

        String msg="12345678";
        String aesEncode = aesEncode(shSM2Pub, msg);

        System.out.println(aesEncode);

//        String dncode = aesDncode(privateKey, aesPass, aesEncode);
//
//        System.out.println(dncode);


    }

}
